// This file has been generated by Py++.

// (C) Christopher Woods, GPL >= 2 License

#include "boost/python.hpp"
#include <QByteArray>
#include <QElapsedTimer>
#include <QUuid>
#include <QBitArray>
#include "QElapsedTimer.pypp.hpp"

namespace bp = boost::python;

QElapsedTimer __copy__(const QElapsedTimer &other){ return QElapsedTimer(other); }

#include "Qt/qdatastream.hpp"

void register_QElapsedTimer_class(){

    { //::QElapsedTimer
        typedef bp::class_< QElapsedTimer > QElapsedTimer_exposer_t;
        QElapsedTimer_exposer_t QElapsedTimer_exposer = QElapsedTimer_exposer_t( "QElapsedTimer", bp::init< >() );
        bp::scope QElapsedTimer_scope( QElapsedTimer_exposer );
        { //::QElapsedTimer::elapsed
        
            typedef qint64 ( ::QElapsedTimer::*elapsed_function_type )(  ) const;
            elapsed_function_type elapsed_function_value( &::QElapsedTimer::elapsed );
            
            QElapsedTimer_exposer.def( 
                "elapsed"
                , elapsed_function_value );
        
        }
        { //::QElapsedTimer::elapsed
        
            typedef qint64 ( ::QElapsedTimer::*nsecs_elapsed_function_type )(  ) const;
            nsecs_elapsed_function_type nsecs_elapsed_function_value( &::QElapsedTimer::nsecsElapsed );
            
            QElapsedTimer_exposer.def( 
                "nsecsElapsed"
                , nsecs_elapsed_function_value );
        
        }
        { //::QElapsedTimer::restart
        
            typedef qint64 ( ::QElapsedTimer::*restart_function_type )(  ) ;
            restart_function_type restart_function_value( &::QElapsedTimer::restart );
            
            QElapsedTimer_exposer.def( 
                "restart"
                , restart_function_value );
        
        }
        { //::QElapsedTimer::start
        
            typedef void ( ::QElapsedTimer::*start_function_type )(  ) ;
            start_function_type start_function_value( &::QElapsedTimer::start );
            
            QElapsedTimer_exposer.def( 
                "start"
                , start_function_value );
        
        }
        QElapsedTimer_exposer.def( "__copy__", &__copy__);
        QElapsedTimer_exposer.def( "__deepcopy__", &__copy__);
        QElapsedTimer_exposer.def( "clone", &__copy__);
    }

}
