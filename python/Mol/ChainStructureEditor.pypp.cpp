// This file has been generated by Py++.

// (C) Christopher Woods, GPL >= 2 License

#include "boost/python.hpp"
#include "Helpers/clone_const_reference.hpp"
#include "ChainStructureEditor.pypp.hpp"

namespace bp = boost::python;

#include "SireError/errors.h"

#include "SireStream/datastream.h"

#include "atom.h"

#include "atomeditor.h"

#include "chain.h"

#include "chaineditor.h"

#include "chainresid.h"

#include "groupatomids.h"

#include "molecule.h"

#include "moleditor.h"

#include "mover.hpp"

#include "reseditor.h"

#include "residue.h"

#include "segeditor.h"

#include "segment.h"

#include "selector.hpp"

#include "chaineditor.h"

SireMol::ChainStructureEditor __copy__(const SireMol::ChainStructureEditor &other){ return SireMol::ChainStructureEditor(other); }

#include "Qt/qdatastream.hpp"

#include "Helpers/str.hpp"

void register_ChainStructureEditor_class(){

    { //::SireMol::ChainStructureEditor
        typedef bp::class_< SireMol::ChainStructureEditor > ChainStructureEditor_exposer_t;
        ChainStructureEditor_exposer_t ChainStructureEditor_exposer = ChainStructureEditor_exposer_t( "ChainStructureEditor", bp::init< >() );
        bp::scope ChainStructureEditor_scope( ChainStructureEditor_exposer );
        ChainStructureEditor_exposer.def( bp::init< SireMol::Chain const & >(( bp::arg("chain") )) );
        ChainStructureEditor_exposer.def( bp::init< SireMol::StructureEditor const &, SireMol::ChainIdx >(( bp::arg("data"), bp::arg("chainidx") )) );
        ChainStructureEditor_exposer.def( bp::init< SireMol::ChainStructureEditor const & >(( bp::arg("other") )) );
        { //::SireMol::ChainStructureEditor::add
        
            typedef ::SireMol::ResStructureEditor ( ::SireMol::ChainStructureEditor::*add_function_type )( ::SireMol::ResName const & ) ;
            add_function_type add_function_value( &::SireMol::ChainStructureEditor::add );
            
            ChainStructureEditor_exposer.def( 
                "add"
                , add_function_value
                , ( bp::arg("resname") ) );
        
        }
        { //::SireMol::ChainStructureEditor::add
        
            typedef ::SireMol::ResStructureEditor ( ::SireMol::ChainStructureEditor::*add_function_type )( ::SireMol::ResNum ) ;
            add_function_type add_function_value( &::SireMol::ChainStructureEditor::add );
            
            ChainStructureEditor_exposer.def( 
                "add"
                , add_function_value
                , ( bp::arg("resnum") ) );
        
        }
        { //::SireMol::ChainStructureEditor::atom
        
            typedef ::SireMol::AtomStructureEditor ( ::SireMol::ChainStructureEditor::*atom_function_type )( ::SireMol::AtomID const & ) ;
            atom_function_type atom_function_value( &::SireMol::ChainStructureEditor::atom );
            
            ChainStructureEditor_exposer.def( 
                "atom"
                , atom_function_value
                , ( bp::arg("atomid") ) );
        
        }
        { //::SireMol::ChainStructureEditor::commit
        
            typedef ::SireMol::Chain ( ::SireMol::ChainStructureEditor::*commit_function_type )(  ) const;
            commit_function_type commit_function_value( &::SireMol::ChainStructureEditor::commit );
            
            ChainStructureEditor_exposer.def( 
                "commit"
                , commit_function_value );
        
        }
        { //::SireMol::ChainStructureEditor::index
        
            typedef ::SireMol::ChainIdx ( ::SireMol::ChainStructureEditor::*index_function_type )(  ) const;
            index_function_type index_function_value( &::SireMol::ChainStructureEditor::index );
            
            ChainStructureEditor_exposer.def( 
                "index"
                , index_function_value );
        
        }
        { //::SireMol::ChainStructureEditor::molecule
        
            typedef ::SireMol::MolStructureEditor ( ::SireMol::ChainStructureEditor::*molecule_function_type )(  ) ;
            molecule_function_type molecule_function_value( &::SireMol::ChainStructureEditor::molecule );
            
            ChainStructureEditor_exposer.def( 
                "molecule"
                , molecule_function_value );
        
        }
        { //::SireMol::ChainStructureEditor::nAtoms
        
            typedef int ( ::SireMol::ChainStructureEditor::*nAtoms_function_type )(  ) const;
            nAtoms_function_type nAtoms_function_value( &::SireMol::ChainStructureEditor::nAtoms );
            
            ChainStructureEditor_exposer.def( 
                "nAtoms"
                , nAtoms_function_value );
        
        }
        { //::SireMol::ChainStructureEditor::nResidues
        
            typedef int ( ::SireMol::ChainStructureEditor::*nResidues_function_type )(  ) const;
            nResidues_function_type nResidues_function_value( &::SireMol::ChainStructureEditor::nResidues );
            
            ChainStructureEditor_exposer.def( 
                "nResidues"
                , nResidues_function_value );
        
        }
        { //::SireMol::ChainStructureEditor::name
        
            typedef ::SireMol::ChainName const & ( ::SireMol::ChainStructureEditor::*name_function_type )(  ) const;
            name_function_type name_function_value( &::SireMol::ChainStructureEditor::name );
            
            ChainStructureEditor_exposer.def( 
                "name"
                , name_function_value
                , bp::return_value_policy<bp::clone_const_reference>() );
        
        }
        { //::SireMol::ChainStructureEditor::operator=
        
            typedef ::SireMol::ChainStructureEditor & ( ::SireMol::ChainStructureEditor::*assign_function_type )( ::SireMol::Chain const & ) ;
            assign_function_type assign_function_value( &::SireMol::ChainStructureEditor::operator= );
            
            ChainStructureEditor_exposer.def( 
                "assign"
                , assign_function_value
                , ( bp::arg("chain") )
                , bp::return_self< >() );
        
        }
        { //::SireMol::ChainStructureEditor::operator=
        
            typedef ::SireMol::ChainStructureEditor & ( ::SireMol::ChainStructureEditor::*assign_function_type )( ::SireMol::ChainStructureEditor const & ) ;
            assign_function_type assign_function_value( &::SireMol::ChainStructureEditor::operator= );
            
            ChainStructureEditor_exposer.def( 
                "assign"
                , assign_function_value
                , ( bp::arg("other") )
                , bp::return_self< >() );
        
        }
        { //::SireMol::ChainStructureEditor::reindex
        
            typedef ::SireMol::ChainStructureEditor & ( ::SireMol::ChainStructureEditor::*reindex_function_type )( ::SireMol::ChainIdx ) ;
            reindex_function_type reindex_function_value( &::SireMol::ChainStructureEditor::reindex );
            
            ChainStructureEditor_exposer.def( 
                "reindex"
                , reindex_function_value
                , ( bp::arg("index") )
                , bp::return_self< >() );
        
        }
        { //::SireMol::ChainStructureEditor::remove
        
            typedef ::SireMol::MolStructureEditor ( ::SireMol::ChainStructureEditor::*remove_function_type )(  ) ;
            remove_function_type remove_function_value( &::SireMol::ChainStructureEditor::remove );
            
            ChainStructureEditor_exposer.def( 
                "remove"
                , remove_function_value
                , bp::return_self< >() );
        
        }
        { //::SireMol::ChainStructureEditor::remove
        
            typedef ::SireMol::ChainStructureEditor & ( ::SireMol::ChainStructureEditor::*remove_function_type )( ::SireMol::ResID const & ) ;
            remove_function_type remove_function_value( &::SireMol::ChainStructureEditor::remove );
            
            ChainStructureEditor_exposer.def( 
                "remove"
                , remove_function_value
                , ( bp::arg("resid") )
                , bp::return_self< >() );
        
        }
        { //::SireMol::ChainStructureEditor::remove
        
            typedef ::SireMol::ChainStructureEditor & ( ::SireMol::ChainStructureEditor::*remove_function_type )( ::SireMol::AtomID const & ) ;
            remove_function_type remove_function_value( &::SireMol::ChainStructureEditor::remove );
            
            ChainStructureEditor_exposer.def( 
                "remove"
                , remove_function_value
                , ( bp::arg("atomid") )
                , bp::return_self< >() );
        
        }
        { //::SireMol::ChainStructureEditor::remove
        
            typedef ::SireMol::ChainStructureEditor & ( ::SireMol::ChainStructureEditor::*remove_function_type )( int ) ;
            remove_function_type remove_function_value( &::SireMol::ChainStructureEditor::remove );
            
            ChainStructureEditor_exposer.def( 
                "remove"
                , remove_function_value
                , ( bp::arg("i") )
                , bp::return_self< >() );
        
        }
        { //::SireMol::ChainStructureEditor::rename
        
            typedef ::SireMol::ChainStructureEditor & ( ::SireMol::ChainStructureEditor::*rename_function_type )( ::SireMol::ChainName const & ) ;
            rename_function_type rename_function_value( &::SireMol::ChainStructureEditor::rename );
            
            ChainStructureEditor_exposer.def( 
                "rename"
                , rename_function_value
                , ( bp::arg("name") )
                , bp::return_self< >() );
        
        }
        { //::SireMol::ChainStructureEditor::residue
        
            typedef ::SireMol::ResStructureEditor ( ::SireMol::ChainStructureEditor::*residue_function_type )( int ) ;
            residue_function_type residue_function_value( &::SireMol::ChainStructureEditor::residue );
            
            ChainStructureEditor_exposer.def( 
                "residue"
                , residue_function_value
                , ( bp::arg("i") ) );
        
        }
        { //::SireMol::ChainStructureEditor::residue
        
            typedef ::SireMol::ResStructureEditor ( ::SireMol::ChainStructureEditor::*residue_function_type )( ::SireMol::ResID const & ) ;
            residue_function_type residue_function_value( &::SireMol::ChainStructureEditor::residue );
            
            ChainStructureEditor_exposer.def( 
                "residue"
                , residue_function_value
                , ( bp::arg("resid") ) );
        
        }
        { //::SireMol::ChainStructureEditor::select
        
            typedef ::SireMol::AtomStructureEditor ( ::SireMol::ChainStructureEditor::*select_function_type )( ::SireMol::AtomID const & ) ;
            select_function_type select_function_value( &::SireMol::ChainStructureEditor::select );
            
            ChainStructureEditor_exposer.def( 
                "select"
                , select_function_value
                , ( bp::arg("atomid") ) );
        
        }
        { //::SireMol::ChainStructureEditor::select
        
            typedef ::SireMol::ResStructureEditor ( ::SireMol::ChainStructureEditor::*select_function_type )( int ) ;
            select_function_type select_function_value( &::SireMol::ChainStructureEditor::select );
            
            ChainStructureEditor_exposer.def( 
                "select"
                , select_function_value
                , ( bp::arg("i") ) );
        
        }
        { //::SireMol::ChainStructureEditor::select
        
            typedef ::SireMol::ResStructureEditor ( ::SireMol::ChainStructureEditor::*select_function_type )( ::SireMol::ResID const & ) ;
            select_function_type select_function_value( &::SireMol::ChainStructureEditor::select );
            
            ChainStructureEditor_exposer.def( 
                "select"
                , select_function_value
                , ( bp::arg("resid") ) );
        
        }
        { //::SireMol::ChainStructureEditor::selectedAll
        
            typedef bool ( ::SireMol::ChainStructureEditor::*selectedAll_function_type )(  ) const;
            selectedAll_function_type selectedAll_function_value( &::SireMol::ChainStructureEditor::selectedAll );
            
            ChainStructureEditor_exposer.def( 
                "selectedAll"
                , selectedAll_function_value );
        
        }
        { //::SireMol::ChainStructureEditor::toString
        
            typedef ::QString ( ::SireMol::ChainStructureEditor::*toString_function_type )(  ) const;
            toString_function_type toString_function_value( &::SireMol::ChainStructureEditor::toString );
            
            ChainStructureEditor_exposer.def( 
                "toString"
                , toString_function_value );
        
        }
        { //::SireMol::ChainStructureEditor::transfer
        
            typedef ::SireMol::ChainStructureEditor & ( ::SireMol::ChainStructureEditor::*transfer_function_type )( ::SireMol::ResID const &,::SireMol::ChainID const & ) ;
            transfer_function_type transfer_function_value( &::SireMol::ChainStructureEditor::transfer );
            
            ChainStructureEditor_exposer.def( 
                "transfer"
                , transfer_function_value
                , ( bp::arg("resid"), bp::arg("chainid") )
                , bp::return_self< >() );
        
        }
        { //::SireMol::ChainStructureEditor::transfer
        
            typedef ::SireMol::ChainStructureEditor & ( ::SireMol::ChainStructureEditor::*transfer_function_type )( int,::SireMol::ChainID const & ) ;
            transfer_function_type transfer_function_value( &::SireMol::ChainStructureEditor::transfer );
            
            ChainStructureEditor_exposer.def( 
                "transfer"
                , transfer_function_value
                , ( bp::arg("i"), bp::arg("resid") )
                , bp::return_self< >() );
        
        }
        { //::SireMol::ChainStructureEditor::transferAll
        
            typedef ::SireMol::ChainStructureEditor & ( ::SireMol::ChainStructureEditor::*transferAll_function_type )( ::SireMol::ChainID const & ) ;
            transferAll_function_type transferAll_function_value( &::SireMol::ChainStructureEditor::transferAll );
            
            ChainStructureEditor_exposer.def( 
                "transferAll"
                , transferAll_function_value
                , ( bp::arg("chainid") )
                , bp::return_self< >() );
        
        }
        { //::SireMol::ChainStructureEditor::typeName
        
            typedef char const * ( *typeName_function_type )(  );
            typeName_function_type typeName_function_value( &::SireMol::ChainStructureEditor::typeName );
            
            ChainStructureEditor_exposer.def( 
                "typeName"
                , typeName_function_value );
        
        }
        { //::SireMol::ChainStructureEditor::what
        
            typedef char const * ( ::SireMol::ChainStructureEditor::*what_function_type )(  ) const;
            what_function_type what_function_value( &::SireMol::ChainStructureEditor::what );
            
            ChainStructureEditor_exposer.def( 
                "what"
                , what_function_value );
        
        }
        ChainStructureEditor_exposer.staticmethod( "typeName" );
        ChainStructureEditor_exposer.def( "__copy__", &__copy__);
        ChainStructureEditor_exposer.def( "__deepcopy__", &__copy__);
        ChainStructureEditor_exposer.def( "clone", &__copy__);
        ChainStructureEditor_exposer.def( "__rlshift__", &__rlshift__QDataStream< ::SireMol::ChainStructureEditor >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() );
        ChainStructureEditor_exposer.def( "__rrshift__", &__rrshift__QDataStream< ::SireMol::ChainStructureEditor >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() );
        ChainStructureEditor_exposer.def( "__str__", &__str__< ::SireMol::ChainStructureEditor > );
        ChainStructureEditor_exposer.def( "__repr__", &__str__< ::SireMol::ChainStructureEditor > );
    }

}
